import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as o,o as a}from"./app-ptbqs2O5.js";const i="/assets/windows-download-page-DRwtFbhQ.png",l="/assets/windows-arch-page-BzmF7cjT.png",r="/assets/windows-installer-page1-Wzt9TlGB.png",s="/assets/windows-installer-page2-C-MckIv5.png",d="/assets/windows-installer-page3--LwukGcq.png",p="/assets/windows-installer-finish-5Kw_wSOd.png",c={};function h(u,e){return a(),t("div",null,e[0]||(e[0]=[o('<p>Python 是一种解释型编程语言。这种类型的编程语言，会将代码一句一句直接执行，不需要像编译语言（Compiled language）一样，经过编译器预先编译为机器代码，之后再执行。Python 程序运行的时候，需要利用 Python 解释器，动态地将代码逐句解释（interpret）为机器代码，然后再执行。</p><p>Python 官方推荐并维护的解释器是 CPython。CPython 目前支持 Windows, Linux, UNIX, macOS 等系统。下面让我们来安装它。</p><h2 id="windows-系统" tabindex="-1"><a class="header-anchor" href="#windows-系统"><span>Windows 系统</span></a></h2><p>如图所示，使用浏览器打开 Python 网站中 <a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener noreferrer">Windows 版本下载页面</a>。点击最上方的链接进入最新版本下载页面。</p><figure><img src="'+i+'" alt="Python 下载" tabindex="0" loading="lazy"><figcaption>Python 下载</figcaption></figure><p>根据系统架构（32 位/64 位/ARM64）选择适当的安装包下载。</p><figure><img src="'+l+'" alt="选择适当的安装包" width="350" tabindex="0" loading="lazy"><figcaption>选择适当的安装包</figcaption></figure><p>下载后，双击安装包开始安装。选中下方的 <code>Use admin privileges when installing py.exe</code> 与 <code>Add python.exe to PATH</code> 后，点击 <code>Customize installation</code> 开始安装。</p><figure><img src="'+r+'" alt="Python 安装器第一页" tabindex="0" loading="lazy"><figcaption>Python 安装器第一页</figcaption></figure><p>第二页中的选项初学者大概不需要理会，直接点击 <code>Next</code> 进入下一页即可。</p><figure><img src="'+s+'" alt="Python 安装器第二页" tabindex="0" loading="lazy"><figcaption>Python 安装器第二页</figcaption></figure><p>在第三页中，选中上方的 <code>Install Python 3.13 for all users</code> 以允许所有用户使用 Python。若有需要，更改下方的安装路径。点击 Install 以继续安装 Python。</p><figure><img src="'+d+'" alt="Python 安装器第三页" tabindex="0" loading="lazy"><figcaption>Python 安装器第三页</figcaption></figure><p>当你看到下方的页面时，请点击一下中间的 <code>Disable path length limit</code>。恭喜你，你已成功将 Python 解释器安装至你的电脑。</p><figure><img src="'+p+'" alt="Python 安装完成" tabindex="0" loading="lazy"><figcaption>Python 安装完成</figcaption></figure><h2 id="macos-系统" tabindex="-1"><a class="header-anchor" href="#macos-系统"><span>macOS 系统</span></a></h2><p>TODO</p><h2 id="linux-系统" tabindex="-1"><a class="header-anchor" href="#linux-系统"><span>Linux 系统</span></a></h2><p>Python 存在于大多数发行版的软件包仓库中。以下对几种常见的发行版中 Python 的安装方式进行详细描述。若未找到你的发行版，请前往发行版的软件包仓库中自行寻找，或参考自行编译。</p><h3 id="debian-ubuntu-deepin-uos-等-debian-系发行版" tabindex="-1"><a class="header-anchor" href="#debian-ubuntu-deepin-uos-等-debian-系发行版"><span>Debian/Ubuntu/Deepin/UOS 等 Debian 系发行版</span></a></h3><p>使用 <code>sudo apt update; sudo apt install python-is-python3</code> 安装。</p><h3 id="arch-linux" tabindex="-1"><a class="header-anchor" href="#arch-linux"><span>Arch Linux</span></a></h3><p>使用 <code>sudo pacman -Syy python</code> 安装。</p><h3 id="nixos" tabindex="-1"><a class="header-anchor" href="#nixos"><span>NixOS</span></a></h3><p>使用 <code>nix-env -iA nixos.python313</code>、将 <code>nixos.python313</code> 写入 <code>/etc/nixos/configuration.nix</code> 中的 <code>enviroment.systemPackages</code> 部分或使用 Flake 安装。</p><h3 id="fedora" tabindex="-1"><a class="header-anchor" href="#fedora"><span>Fedora</span></a></h3><p>使用 <code>sudo dnf upgrade --refresh; sudo dnf install python3</code> 安装。</p><h2 id="自行编译" tabindex="-1"><a class="header-anchor" href="#自行编译"><span>自行编译</span></a></h2><p>若在上方没有找到你的系统，可以尝试手动编译 CPython。</p><p>前往 <a href="https://www.python.org/downloads/source/" target="_blank" rel="noopener noreferrer">Python 源代码下载页</a>，点击 <code>Latest Python3 Release</code> 并点击 Gzipped source tarball 下载最新版本的 Python 源代码。</p><p>使用 <code>tar xvzf [filename]</code> 解压压缩包。进入解压后的文件夹，使用 <code>./configure</code> 进行编译前的配置。配置过程会很快完成。完成后，使用 <code>sudo make install</code> 编译并安装。</p>',31)]))}const m=n(c,[["render",h],["__file","install-env.html.vue"]]),f=JSON.parse('{"path":"/docs/python-world-intro/install-env.html","title":"安装 Python 环境","lang":"zh-CN","frontmatter":{"title":"安装 Python 环境","tags":["Python","Python 世界初窥"],"author":["Hello8693","unDefFtr"],"description":"Python 是一种解释型编程语言。这种类型的编程语言，会将代码一句一句直接执行，不需要像编译语言（Compiled language）一样，经过编译器预先编译为机器代码，之后再执行。Python 程序运行的时候，需要利用 Python 解释器，动态地将代码逐句解释（interpret）为机器代码，然后再执行。 Python 官方推荐并维护的解释器是 ...","head":[["meta",{"property":"og:url","content":"https://py.hello8693.xyz/docs/python-world-intro/install-env.html"}],["meta",{"property":"og:site_name","content":"Python 教程"}],["meta",{"property":"og:title","content":"安装 Python 环境"}],["meta",{"property":"og:description","content":"Python 是一种解释型编程语言。这种类型的编程语言，会将代码一句一句直接执行，不需要像编译语言（Compiled language）一样，经过编译器预先编译为机器代码，之后再执行。Python 程序运行的时候，需要利用 Python 解释器，动态地将代码逐句解释（interpret）为机器代码，然后再执行。 Python 官方推荐并维护的解释器是 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-27T14:30:44.000Z"}],["meta",{"property":"article:author","content":"Hello8693"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"Python 世界初窥"}],["meta",{"property":"article:modified_time","content":"2024-12-27T14:30:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装 Python 环境\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-27T14:30:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hello8693\\"},{\\"@type\\":\\"Person\\",\\"name\\":\\"unDefFtr\\"}]}"]]},"headers":[{"level":2,"title":"Windows 系统","slug":"windows-系统","link":"#windows-系统","children":[]},{"level":2,"title":"macOS 系统","slug":"macos-系统","link":"#macos-系统","children":[]},{"level":2,"title":"Linux 系统","slug":"linux-系统","link":"#linux-系统","children":[{"level":3,"title":"Debian/Ubuntu/Deepin/UOS 等 Debian 系发行版","slug":"debian-ubuntu-deepin-uos-等-debian-系发行版","link":"#debian-ubuntu-deepin-uos-等-debian-系发行版","children":[]},{"level":3,"title":"Arch Linux","slug":"arch-linux","link":"#arch-linux","children":[]},{"level":3,"title":"NixOS","slug":"nixos","link":"#nixos","children":[]},{"level":3,"title":"Fedora","slug":"fedora","link":"#fedora","children":[]}]},{"level":2,"title":"自行编译","slug":"自行编译","link":"#自行编译","children":[]}],"git":{"createdTime":1734756596000,"updatedTime":1735309844000,"contributors":[{"name":"hello8693","username":"hello8693","email":"1320998105@qq.com","commits":3,"url":"https://github.com/hello8693"},{"name":"unDefFtr","username":"unDefFtr","email":"undefftr@undefined.ac.cn","commits":5,"url":"https://github.com/unDefFtr"}]},"readingTime":{"minutes":2.3,"words":691},"filePathRelative":"docs/python-world-intro/install-env.md","localizedDate":"2024年12月21日","autoDesc":true}');export{m as comp,f as data};
